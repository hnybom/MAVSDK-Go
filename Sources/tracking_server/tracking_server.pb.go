// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.9
// source: tracking_server.proto

package tracking_server

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Answer to respond to an incoming command
type CommandAnswer int32

const (
	CommandAnswer_COMMAND_ANSWER_ACCEPTED             CommandAnswer = 0 // Command accepted
	CommandAnswer_COMMAND_ANSWER_TEMPORARILY_REJECTED CommandAnswer = 1 // Command temporarily rejected
	CommandAnswer_COMMAND_ANSWER_DENIED               CommandAnswer = 2 // Command denied
	CommandAnswer_COMMAND_ANSWER_UNSUPPORTED          CommandAnswer = 3 // Command unsupported
	CommandAnswer_COMMAND_ANSWER_FAILED               CommandAnswer = 4 // Command failed
)

// Enum value maps for CommandAnswer.
var (
	CommandAnswer_name = map[int32]string{
		0: "COMMAND_ANSWER_ACCEPTED",
		1: "COMMAND_ANSWER_TEMPORARILY_REJECTED",
		2: "COMMAND_ANSWER_DENIED",
		3: "COMMAND_ANSWER_UNSUPPORTED",
		4: "COMMAND_ANSWER_FAILED",
	}
	CommandAnswer_value = map[string]int32{
		"COMMAND_ANSWER_ACCEPTED":             0,
		"COMMAND_ANSWER_TEMPORARILY_REJECTED": 1,
		"COMMAND_ANSWER_DENIED":               2,
		"COMMAND_ANSWER_UNSUPPORTED":          3,
		"COMMAND_ANSWER_FAILED":               4,
	}
)

func (x CommandAnswer) Enum() *CommandAnswer {
	p := new(CommandAnswer)
	*p = x
	return p
}

func (x CommandAnswer) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CommandAnswer) Descriptor() protoreflect.EnumDescriptor {
	return file_tracking_server_proto_enumTypes[0].Descriptor()
}

func (CommandAnswer) Type() protoreflect.EnumType {
	return &file_tracking_server_proto_enumTypes[0]
}

func (x CommandAnswer) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CommandAnswer.Descriptor instead.
func (CommandAnswer) EnumDescriptor() ([]byte, []int) {
	return file_tracking_server_proto_rawDescGZIP(), []int{0}
}

// Possible results returned for tracking_server requests.
type TrackingServerResult_Result int32

const (
	TrackingServerResult_RESULT_UNKNOWN          TrackingServerResult_Result = 0 // Unknown result
	TrackingServerResult_RESULT_SUCCESS          TrackingServerResult_Result = 1 // Request succeeded
	TrackingServerResult_RESULT_NO_SYSTEM        TrackingServerResult_Result = 2 // No system is connected
	TrackingServerResult_RESULT_CONNECTION_ERROR TrackingServerResult_Result = 3 // Connection error
)

// Enum value maps for TrackingServerResult_Result.
var (
	TrackingServerResult_Result_name = map[int32]string{
		0: "RESULT_UNKNOWN",
		1: "RESULT_SUCCESS",
		2: "RESULT_NO_SYSTEM",
		3: "RESULT_CONNECTION_ERROR",
	}
	TrackingServerResult_Result_value = map[string]int32{
		"RESULT_UNKNOWN":          0,
		"RESULT_SUCCESS":          1,
		"RESULT_NO_SYSTEM":        2,
		"RESULT_CONNECTION_ERROR": 3,
	}
)

func (x TrackingServerResult_Result) Enum() *TrackingServerResult_Result {
	p := new(TrackingServerResult_Result)
	*p = x
	return p
}

func (x TrackingServerResult_Result) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TrackingServerResult_Result) Descriptor() protoreflect.EnumDescriptor {
	return file_tracking_server_proto_enumTypes[1].Descriptor()
}

func (TrackingServerResult_Result) Type() protoreflect.EnumType {
	return &file_tracking_server_proto_enumTypes[1]
}

func (x TrackingServerResult_Result) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TrackingServerResult_Result.Descriptor instead.
func (TrackingServerResult_Result) EnumDescriptor() ([]byte, []int) {
	return file_tracking_server_proto_rawDescGZIP(), []int{20, 0}
}

type SetTrackingPointStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrackedPoint *TrackPoint `protobuf:"bytes,1,opt,name=tracked_point,json=trackedPoint,proto3" json:"tracked_point,omitempty"` // The tracked point
}

func (x *SetTrackingPointStatusRequest) Reset() {
	*x = SetTrackingPointStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tracking_server_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetTrackingPointStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetTrackingPointStatusRequest) ProtoMessage() {}

func (x *SetTrackingPointStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tracking_server_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetTrackingPointStatusRequest.ProtoReflect.Descriptor instead.
func (*SetTrackingPointStatusRequest) Descriptor() ([]byte, []int) {
	return file_tracking_server_proto_rawDescGZIP(), []int{0}
}

func (x *SetTrackingPointStatusRequest) GetTrackedPoint() *TrackPoint {
	if x != nil {
		return x.TrackedPoint
	}
	return nil
}

type SetTrackingPointStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetTrackingPointStatusResponse) Reset() {
	*x = SetTrackingPointStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tracking_server_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetTrackingPointStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetTrackingPointStatusResponse) ProtoMessage() {}

func (x *SetTrackingPointStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tracking_server_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetTrackingPointStatusResponse.ProtoReflect.Descriptor instead.
func (*SetTrackingPointStatusResponse) Descriptor() ([]byte, []int) {
	return file_tracking_server_proto_rawDescGZIP(), []int{1}
}

type SetTrackingRectangleStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrackedRectangle *TrackRectangle `protobuf:"bytes,1,opt,name=tracked_rectangle,json=trackedRectangle,proto3" json:"tracked_rectangle,omitempty"` // The tracked rectangle
}

func (x *SetTrackingRectangleStatusRequest) Reset() {
	*x = SetTrackingRectangleStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tracking_server_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetTrackingRectangleStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetTrackingRectangleStatusRequest) ProtoMessage() {}

func (x *SetTrackingRectangleStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tracking_server_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetTrackingRectangleStatusRequest.ProtoReflect.Descriptor instead.
func (*SetTrackingRectangleStatusRequest) Descriptor() ([]byte, []int) {
	return file_tracking_server_proto_rawDescGZIP(), []int{2}
}

func (x *SetTrackingRectangleStatusRequest) GetTrackedRectangle() *TrackRectangle {
	if x != nil {
		return x.TrackedRectangle
	}
	return nil
}

type SetTrackingRectangleStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetTrackingRectangleStatusResponse) Reset() {
	*x = SetTrackingRectangleStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tracking_server_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetTrackingRectangleStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetTrackingRectangleStatusResponse) ProtoMessage() {}

func (x *SetTrackingRectangleStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tracking_server_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetTrackingRectangleStatusResponse.ProtoReflect.Descriptor instead.
func (*SetTrackingRectangleStatusResponse) Descriptor() ([]byte, []int) {
	return file_tracking_server_proto_rawDescGZIP(), []int{3}
}

type SetTrackingOffStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetTrackingOffStatusRequest) Reset() {
	*x = SetTrackingOffStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tracking_server_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetTrackingOffStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetTrackingOffStatusRequest) ProtoMessage() {}

func (x *SetTrackingOffStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tracking_server_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetTrackingOffStatusRequest.ProtoReflect.Descriptor instead.
func (*SetTrackingOffStatusRequest) Descriptor() ([]byte, []int) {
	return file_tracking_server_proto_rawDescGZIP(), []int{4}
}

type SetTrackingOffStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetTrackingOffStatusResponse) Reset() {
	*x = SetTrackingOffStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tracking_server_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetTrackingOffStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetTrackingOffStatusResponse) ProtoMessage() {}

func (x *SetTrackingOffStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tracking_server_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetTrackingOffStatusResponse.ProtoReflect.Descriptor instead.
func (*SetTrackingOffStatusResponse) Descriptor() ([]byte, []int) {
	return file_tracking_server_proto_rawDescGZIP(), []int{5}
}

type SubscribeTrackingPointCommandRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SubscribeTrackingPointCommandRequest) Reset() {
	*x = SubscribeTrackingPointCommandRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tracking_server_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeTrackingPointCommandRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeTrackingPointCommandRequest) ProtoMessage() {}

func (x *SubscribeTrackingPointCommandRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tracking_server_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeTrackingPointCommandRequest.ProtoReflect.Descriptor instead.
func (*SubscribeTrackingPointCommandRequest) Descriptor() ([]byte, []int) {
	return file_tracking_server_proto_rawDescGZIP(), []int{6}
}

type TrackingPointCommandResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrackPoint *TrackPoint `protobuf:"bytes,1,opt,name=track_point,json=trackPoint,proto3" json:"track_point,omitempty"` // The point to track if a point is to be tracked
}

func (x *TrackingPointCommandResponse) Reset() {
	*x = TrackingPointCommandResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tracking_server_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrackingPointCommandResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackingPointCommandResponse) ProtoMessage() {}

func (x *TrackingPointCommandResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tracking_server_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackingPointCommandResponse.ProtoReflect.Descriptor instead.
func (*TrackingPointCommandResponse) Descriptor() ([]byte, []int) {
	return file_tracking_server_proto_rawDescGZIP(), []int{7}
}

func (x *TrackingPointCommandResponse) GetTrackPoint() *TrackPoint {
	if x != nil {
		return x.TrackPoint
	}
	return nil
}

type SubscribeTrackingRectangleCommandRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SubscribeTrackingRectangleCommandRequest) Reset() {
	*x = SubscribeTrackingRectangleCommandRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tracking_server_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeTrackingRectangleCommandRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeTrackingRectangleCommandRequest) ProtoMessage() {}

func (x *SubscribeTrackingRectangleCommandRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tracking_server_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeTrackingRectangleCommandRequest.ProtoReflect.Descriptor instead.
func (*SubscribeTrackingRectangleCommandRequest) Descriptor() ([]byte, []int) {
	return file_tracking_server_proto_rawDescGZIP(), []int{8}
}

type TrackingRectangleCommandResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrackRectangle *TrackRectangle `protobuf:"bytes,1,opt,name=track_rectangle,json=trackRectangle,proto3" json:"track_rectangle,omitempty"` // The point to track if a point is to be tracked
}

func (x *TrackingRectangleCommandResponse) Reset() {
	*x = TrackingRectangleCommandResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tracking_server_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrackingRectangleCommandResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackingRectangleCommandResponse) ProtoMessage() {}

func (x *TrackingRectangleCommandResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tracking_server_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackingRectangleCommandResponse.ProtoReflect.Descriptor instead.
func (*TrackingRectangleCommandResponse) Descriptor() ([]byte, []int) {
	return file_tracking_server_proto_rawDescGZIP(), []int{9}
}

func (x *TrackingRectangleCommandResponse) GetTrackRectangle() *TrackRectangle {
	if x != nil {
		return x.TrackRectangle
	}
	return nil
}

type SubscribeTrackingOffCommandRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SubscribeTrackingOffCommandRequest) Reset() {
	*x = SubscribeTrackingOffCommandRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tracking_server_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeTrackingOffCommandRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeTrackingOffCommandRequest) ProtoMessage() {}

func (x *SubscribeTrackingOffCommandRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tracking_server_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeTrackingOffCommandRequest.ProtoReflect.Descriptor instead.
func (*SubscribeTrackingOffCommandRequest) Descriptor() ([]byte, []int) {
	return file_tracking_server_proto_rawDescGZIP(), []int{10}
}

type TrackingOffCommandResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dummy int32 `protobuf:"varint,1,opt,name=dummy,proto3" json:"dummy,omitempty"` // Unused
}

func (x *TrackingOffCommandResponse) Reset() {
	*x = TrackingOffCommandResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tracking_server_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrackingOffCommandResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackingOffCommandResponse) ProtoMessage() {}

func (x *TrackingOffCommandResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tracking_server_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackingOffCommandResponse.ProtoReflect.Descriptor instead.
func (*TrackingOffCommandResponse) Descriptor() ([]byte, []int) {
	return file_tracking_server_proto_rawDescGZIP(), []int{11}
}

func (x *TrackingOffCommandResponse) GetDummy() int32 {
	if x != nil {
		return x.Dummy
	}
	return 0
}

type RespondTrackingPointCommandRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommandAnswer CommandAnswer `protobuf:"varint,1,opt,name=command_answer,json=commandAnswer,proto3,enum=mavsdk.rpc.tracking_server.CommandAnswer" json:"command_answer,omitempty"` // The ack to answer to the incoming command
}

func (x *RespondTrackingPointCommandRequest) Reset() {
	*x = RespondTrackingPointCommandRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tracking_server_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespondTrackingPointCommandRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespondTrackingPointCommandRequest) ProtoMessage() {}

func (x *RespondTrackingPointCommandRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tracking_server_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespondTrackingPointCommandRequest.ProtoReflect.Descriptor instead.
func (*RespondTrackingPointCommandRequest) Descriptor() ([]byte, []int) {
	return file_tracking_server_proto_rawDescGZIP(), []int{12}
}

func (x *RespondTrackingPointCommandRequest) GetCommandAnswer() CommandAnswer {
	if x != nil {
		return x.CommandAnswer
	}
	return CommandAnswer_COMMAND_ANSWER_ACCEPTED
}

type RespondTrackingPointCommandResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrackingServerResult *TrackingServerResult `protobuf:"bytes,1,opt,name=tracking_server_result,json=trackingServerResult,proto3" json:"tracking_server_result,omitempty"` // The result of sending the response.
}

func (x *RespondTrackingPointCommandResponse) Reset() {
	*x = RespondTrackingPointCommandResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tracking_server_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespondTrackingPointCommandResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespondTrackingPointCommandResponse) ProtoMessage() {}

func (x *RespondTrackingPointCommandResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tracking_server_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespondTrackingPointCommandResponse.ProtoReflect.Descriptor instead.
func (*RespondTrackingPointCommandResponse) Descriptor() ([]byte, []int) {
	return file_tracking_server_proto_rawDescGZIP(), []int{13}
}

func (x *RespondTrackingPointCommandResponse) GetTrackingServerResult() *TrackingServerResult {
	if x != nil {
		return x.TrackingServerResult
	}
	return nil
}

type RespondTrackingRectangleCommandRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommandAnswer CommandAnswer `protobuf:"varint,1,opt,name=command_answer,json=commandAnswer,proto3,enum=mavsdk.rpc.tracking_server.CommandAnswer" json:"command_answer,omitempty"` // The ack to answer to the incoming command
}

func (x *RespondTrackingRectangleCommandRequest) Reset() {
	*x = RespondTrackingRectangleCommandRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tracking_server_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespondTrackingRectangleCommandRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespondTrackingRectangleCommandRequest) ProtoMessage() {}

func (x *RespondTrackingRectangleCommandRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tracking_server_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespondTrackingRectangleCommandRequest.ProtoReflect.Descriptor instead.
func (*RespondTrackingRectangleCommandRequest) Descriptor() ([]byte, []int) {
	return file_tracking_server_proto_rawDescGZIP(), []int{14}
}

func (x *RespondTrackingRectangleCommandRequest) GetCommandAnswer() CommandAnswer {
	if x != nil {
		return x.CommandAnswer
	}
	return CommandAnswer_COMMAND_ANSWER_ACCEPTED
}

type RespondTrackingRectangleCommandResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrackingServerResult *TrackingServerResult `protobuf:"bytes,1,opt,name=tracking_server_result,json=trackingServerResult,proto3" json:"tracking_server_result,omitempty"` // The result of sending the response.
}

func (x *RespondTrackingRectangleCommandResponse) Reset() {
	*x = RespondTrackingRectangleCommandResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tracking_server_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespondTrackingRectangleCommandResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespondTrackingRectangleCommandResponse) ProtoMessage() {}

func (x *RespondTrackingRectangleCommandResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tracking_server_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespondTrackingRectangleCommandResponse.ProtoReflect.Descriptor instead.
func (*RespondTrackingRectangleCommandResponse) Descriptor() ([]byte, []int) {
	return file_tracking_server_proto_rawDescGZIP(), []int{15}
}

func (x *RespondTrackingRectangleCommandResponse) GetTrackingServerResult() *TrackingServerResult {
	if x != nil {
		return x.TrackingServerResult
	}
	return nil
}

type RespondTrackingOffCommandRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommandAnswer CommandAnswer `protobuf:"varint,1,opt,name=command_answer,json=commandAnswer,proto3,enum=mavsdk.rpc.tracking_server.CommandAnswer" json:"command_answer,omitempty"` // The ack to answer to the incoming command
}

func (x *RespondTrackingOffCommandRequest) Reset() {
	*x = RespondTrackingOffCommandRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tracking_server_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespondTrackingOffCommandRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespondTrackingOffCommandRequest) ProtoMessage() {}

func (x *RespondTrackingOffCommandRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tracking_server_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespondTrackingOffCommandRequest.ProtoReflect.Descriptor instead.
func (*RespondTrackingOffCommandRequest) Descriptor() ([]byte, []int) {
	return file_tracking_server_proto_rawDescGZIP(), []int{16}
}

func (x *RespondTrackingOffCommandRequest) GetCommandAnswer() CommandAnswer {
	if x != nil {
		return x.CommandAnswer
	}
	return CommandAnswer_COMMAND_ANSWER_ACCEPTED
}

type RespondTrackingOffCommandResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrackingServerResult *TrackingServerResult `protobuf:"bytes,1,opt,name=tracking_server_result,json=trackingServerResult,proto3" json:"tracking_server_result,omitempty"` // The result of sending the response.
}

func (x *RespondTrackingOffCommandResponse) Reset() {
	*x = RespondTrackingOffCommandResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tracking_server_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespondTrackingOffCommandResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespondTrackingOffCommandResponse) ProtoMessage() {}

func (x *RespondTrackingOffCommandResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tracking_server_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespondTrackingOffCommandResponse.ProtoReflect.Descriptor instead.
func (*RespondTrackingOffCommandResponse) Descriptor() ([]byte, []int) {
	return file_tracking_server_proto_rawDescGZIP(), []int{17}
}

func (x *RespondTrackingOffCommandResponse) GetTrackingServerResult() *TrackingServerResult {
	if x != nil {
		return x.TrackingServerResult
	}
	return nil
}

// Point description type
type TrackPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PointX float32 `protobuf:"fixed32,1,opt,name=point_x,json=pointX,proto3" json:"point_x,omitempty"` // Point to track x value (normalized 0..1, 0 is left, 1 is right).
	PointY float32 `protobuf:"fixed32,2,opt,name=point_y,json=pointY,proto3" json:"point_y,omitempty"` // Point to track y value (normalized 0..1, 0 is top, 1 is bottom).
	Radius float32 `protobuf:"fixed32,3,opt,name=radius,proto3" json:"radius,omitempty"`               // Point to track y value (normalized 0..1, 0 is top, 1 is bottom).
}

func (x *TrackPoint) Reset() {
	*x = TrackPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tracking_server_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrackPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackPoint) ProtoMessage() {}

func (x *TrackPoint) ProtoReflect() protoreflect.Message {
	mi := &file_tracking_server_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackPoint.ProtoReflect.Descriptor instead.
func (*TrackPoint) Descriptor() ([]byte, []int) {
	return file_tracking_server_proto_rawDescGZIP(), []int{18}
}

func (x *TrackPoint) GetPointX() float32 {
	if x != nil {
		return x.PointX
	}
	return 0
}

func (x *TrackPoint) GetPointY() float32 {
	if x != nil {
		return x.PointY
	}
	return 0
}

func (x *TrackPoint) GetRadius() float32 {
	if x != nil {
		return x.Radius
	}
	return 0
}

// Rectangle description type
type TrackRectangle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopLeftCornerX     float32 `protobuf:"fixed32,1,opt,name=top_left_corner_x,json=topLeftCornerX,proto3" json:"top_left_corner_x,omitempty"`             // Top left corner of rectangle x value (normalized 0..1, 0 is left, 1 is right).
	TopLeftCornerY     float32 `protobuf:"fixed32,2,opt,name=top_left_corner_y,json=topLeftCornerY,proto3" json:"top_left_corner_y,omitempty"`             // Top left corner of rectangle y value (normalized 0..1, 0 is top, 1 is bottom).
	BottomRightCornerX float32 `protobuf:"fixed32,3,opt,name=bottom_right_corner_x,json=bottomRightCornerX,proto3" json:"bottom_right_corner_x,omitempty"` // Bottom right corner of rectangle x value (normalized 0..1, 0 is left, 1 is right).
	BottomRightCornerY float32 `protobuf:"fixed32,4,opt,name=bottom_right_corner_y,json=bottomRightCornerY,proto3" json:"bottom_right_corner_y,omitempty"` // Bottom right corner of rectangle y value (normalized 0..1, 0 is top, 1 is bottom).
}

func (x *TrackRectangle) Reset() {
	*x = TrackRectangle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tracking_server_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrackRectangle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackRectangle) ProtoMessage() {}

func (x *TrackRectangle) ProtoReflect() protoreflect.Message {
	mi := &file_tracking_server_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackRectangle.ProtoReflect.Descriptor instead.
func (*TrackRectangle) Descriptor() ([]byte, []int) {
	return file_tracking_server_proto_rawDescGZIP(), []int{19}
}

func (x *TrackRectangle) GetTopLeftCornerX() float32 {
	if x != nil {
		return x.TopLeftCornerX
	}
	return 0
}

func (x *TrackRectangle) GetTopLeftCornerY() float32 {
	if x != nil {
		return x.TopLeftCornerY
	}
	return 0
}

func (x *TrackRectangle) GetBottomRightCornerX() float32 {
	if x != nil {
		return x.BottomRightCornerX
	}
	return 0
}

func (x *TrackRectangle) GetBottomRightCornerY() float32 {
	if x != nil {
		return x.BottomRightCornerY
	}
	return 0
}

// Result type
type TrackingServerResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result    TrackingServerResult_Result `protobuf:"varint,1,opt,name=result,proto3,enum=mavsdk.rpc.tracking_server.TrackingServerResult_Result" json:"result,omitempty"` // Result enum value
	ResultStr string                      `protobuf:"bytes,2,opt,name=result_str,json=resultStr,proto3" json:"result_str,omitempty"`                                       // Human-readable English string describing the result
}

func (x *TrackingServerResult) Reset() {
	*x = TrackingServerResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tracking_server_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrackingServerResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackingServerResult) ProtoMessage() {}

func (x *TrackingServerResult) ProtoReflect() protoreflect.Message {
	mi := &file_tracking_server_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackingServerResult.ProtoReflect.Descriptor instead.
func (*TrackingServerResult) Descriptor() ([]byte, []int) {
	return file_tracking_server_proto_rawDescGZIP(), []int{20}
}

func (x *TrackingServerResult) GetResult() TrackingServerResult_Result {
	if x != nil {
		return x.Result
	}
	return TrackingServerResult_RESULT_UNKNOWN
}

func (x *TrackingServerResult) GetResultStr() string {
	if x != nil {
		return x.ResultStr
	}
	return ""
}

var File_tracking_server_proto protoreflect.FileDescriptor

var file_tracking_server_proto_rawDesc = []byte{
	0x0a, 0x15, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1a, 0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x1a, 0x14, 0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b, 0x5f, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6c, 0x0a, 0x1d, 0x53, 0x65, 0x74,
	0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4b, 0x0a, 0x0d, 0x74, 0x72,
	0x61, 0x63, 0x6b, 0x65, 0x64, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x74,
	0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x54,
	0x72, 0x61, 0x63, 0x6b, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x63, 0x6b,
	0x65, 0x64, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x20, 0x0a, 0x1e, 0x53, 0x65, 0x74, 0x54, 0x72,
	0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x7c, 0x0a, 0x21, 0x53, 0x65, 0x74,
	0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x6c,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x57,
	0x0a, 0x11, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x63, 0x74, 0x61, 0x6e,
	0x67, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6d, 0x61, 0x76, 0x73,
	0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x63, 0x74,
	0x61, 0x6e, 0x67, 0x6c, 0x65, 0x52, 0x10, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x52, 0x65,
	0x63, 0x74, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x22, 0x24, 0x0a, 0x22, 0x53, 0x65, 0x74, 0x54, 0x72,
	0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0x0a,
	0x1b, 0x53, 0x65, 0x74, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4f, 0x66, 0x66, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x1e, 0x0a, 0x1c,
	0x53, 0x65, 0x74, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4f, 0x66, 0x66, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x26, 0x0a, 0x24,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e,
	0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x67, 0x0a, 0x1c, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x5f, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6d, 0x61, 0x76, 0x73,
	0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x2a, 0x0a,
	0x28, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x77, 0x0a, 0x20, 0x54, 0x72, 0x61,
	0x63, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a,
	0x0f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x5f, 0x72, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67,
	0x6c, 0x65, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67,
	0x6c, 0x65, 0x22, 0x24, 0x0a, 0x22, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54,
	0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4f, 0x66, 0x66, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x32, 0x0a, 0x1a, 0x54, 0x72, 0x61, 0x63,
	0x6b, 0x69, 0x6e, 0x67, 0x4f, 0x66, 0x66, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x75, 0x6d, 0x6d, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x64, 0x75, 0x6d, 0x6d, 0x79, 0x22, 0x76, 0x0a, 0x22,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x50, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x61, 0x6e,
	0x73, 0x77, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x6d, 0x61, 0x76,
	0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x41,
	0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x41, 0x6e,
	0x73, 0x77, 0x65, 0x72, 0x22, 0x8d, 0x01, 0x0a, 0x23, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64,
	0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a, 0x16,
	0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x6d,
	0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69,
	0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69,
	0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x14,
	0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x7a, 0x0a, 0x26, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x54,
	0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x6c, 0x65,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x50,
	0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x41, 0x6e, 0x73, 0x77, 0x65,
	0x72, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72,
	0x22, 0x91, 0x01, 0x0a, 0x27, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x54, 0x72, 0x61, 0x63,
	0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a, 0x16,
	0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x6d,
	0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69,
	0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69,
	0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x14,
	0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x74, 0x0a, 0x20, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x54,
	0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4f, 0x66, 0x66, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x50, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x5f, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x29, 0x2e, 0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x74, 0x72,
	0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x0d, 0x63, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x22, 0x8b, 0x01, 0x0a, 0x21, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4f, 0x66,
	0x66, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x66, 0x0a, 0x16, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x30, 0x2e, 0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x74, 0x72,
	0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x54, 0x72,
	0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x14, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x56, 0x0a, 0x0a, 0x54, 0x72, 0x61, 0x63,
	0x6b, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f,
	0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x58, 0x12,
	0x17, 0x0a, 0x07, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x59, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x64, 0x69,
	0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x72, 0x61, 0x64, 0x69, 0x75, 0x73,
	0x22, 0xcc, 0x01, 0x0a, 0x0e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x63, 0x74, 0x61, 0x6e,
	0x67, 0x6c, 0x65, 0x12, 0x29, 0x0a, 0x11, 0x74, 0x6f, 0x70, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x5f,
	0x63, 0x6f, 0x72, 0x6e, 0x65, 0x72, 0x5f, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e,
	0x74, 0x6f, 0x70, 0x4c, 0x65, 0x66, 0x74, 0x43, 0x6f, 0x72, 0x6e, 0x65, 0x72, 0x58, 0x12, 0x29,
	0x0a, 0x11, 0x74, 0x6f, 0x70, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x63, 0x6f, 0x72, 0x6e, 0x65,
	0x72, 0x5f, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x74, 0x6f, 0x70, 0x4c, 0x65,
	0x66, 0x74, 0x43, 0x6f, 0x72, 0x6e, 0x65, 0x72, 0x59, 0x12, 0x31, 0x0a, 0x15, 0x62, 0x6f, 0x74,
	0x74, 0x6f, 0x6d, 0x5f, 0x72, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x63, 0x6f, 0x72, 0x6e, 0x65, 0x72,
	0x5f, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x12, 0x62, 0x6f, 0x74, 0x74, 0x6f, 0x6d,
	0x52, 0x69, 0x67, 0x68, 0x74, 0x43, 0x6f, 0x72, 0x6e, 0x65, 0x72, 0x58, 0x12, 0x31, 0x0a, 0x15,
	0x62, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x5f, 0x72, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x63, 0x6f, 0x72,
	0x6e, 0x65, 0x72, 0x5f, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x12, 0x62, 0x6f, 0x74,
	0x74, 0x6f, 0x6d, 0x52, 0x69, 0x67, 0x68, 0x74, 0x43, 0x6f, 0x72, 0x6e, 0x65, 0x72, 0x59, 0x22,
	0xeb, 0x01, 0x0a, 0x14, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x4f, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x37, 0x2e, 0x6d, 0x61, 0x76, 0x73, 0x64,
	0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x5f, 0x73, 0x74, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x53, 0x74, 0x72, 0x22, 0x63, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x55, 0x4e, 0x4b,
	0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54,
	0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x52, 0x45,
	0x53, 0x55, 0x4c, 0x54, 0x5f, 0x4e, 0x4f, 0x5f, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x10, 0x02,
	0x12, 0x1b, 0x0a, 0x17, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x4e, 0x45,
	0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x03, 0x2a, 0xab, 0x01,
	0x0a, 0x0d, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12,
	0x1b, 0x0a, 0x17, 0x43, 0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x5f, 0x41, 0x4e, 0x53, 0x57, 0x45,
	0x52, 0x5f, 0x41, 0x43, 0x43, 0x45, 0x50, 0x54, 0x45, 0x44, 0x10, 0x00, 0x12, 0x27, 0x0a, 0x23,
	0x43, 0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x5f, 0x41, 0x4e, 0x53, 0x57, 0x45, 0x52, 0x5f, 0x54,
	0x45, 0x4d, 0x50, 0x4f, 0x52, 0x41, 0x52, 0x49, 0x4c, 0x59, 0x5f, 0x52, 0x45, 0x4a, 0x45, 0x43,
	0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x43, 0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44,
	0x5f, 0x41, 0x4e, 0x53, 0x57, 0x45, 0x52, 0x5f, 0x44, 0x45, 0x4e, 0x49, 0x45, 0x44, 0x10, 0x02,
	0x12, 0x1e, 0x0a, 0x1a, 0x43, 0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x5f, 0x41, 0x4e, 0x53, 0x57,
	0x45, 0x52, 0x5f, 0x55, 0x4e, 0x53, 0x55, 0x50, 0x50, 0x4f, 0x52, 0x54, 0x45, 0x44, 0x10, 0x03,
	0x12, 0x19, 0x0a, 0x15, 0x43, 0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x5f, 0x41, 0x4e, 0x53, 0x57,
	0x45, 0x52, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x04, 0x32, 0xd8, 0x0b, 0x0a, 0x15,
	0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x95, 0x01, 0x0a, 0x16, 0x53, 0x65, 0x74, 0x54, 0x72, 0x61,
	0x63, 0x6b, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x39, 0x2e, 0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x74, 0x72,
	0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x65,
	0x74, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x6d, 0x61,
	0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e,
	0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x74, 0x54, 0x72, 0x61, 0x63,
	0x6b, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x04, 0x80, 0xb5, 0x18, 0x01, 0x12, 0xa1, 0x01,
	0x0a, 0x1a, 0x53, 0x65, 0x74, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x63,
	0x74, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3d, 0x2e, 0x6d,
	0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69,
	0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x74, 0x54, 0x72, 0x61,
	0x63, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3e, 0x2e, 0x6d, 0x61,
	0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e,
	0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x74, 0x54, 0x72, 0x61, 0x63,
	0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x04, 0x80, 0xb5, 0x18,
	0x01, 0x12, 0x8f, 0x01, 0x0a, 0x14, 0x53, 0x65, 0x74, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e,
	0x67, 0x4f, 0x66, 0x66, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x37, 0x2e, 0x6d, 0x61, 0x76,
	0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x74, 0x54, 0x72, 0x61, 0x63, 0x6b,
	0x69, 0x6e, 0x67, 0x4f, 0x66, 0x66, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x53, 0x65, 0x74, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4f, 0x66, 0x66, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x04, 0x80,
	0xb5, 0x18, 0x01, 0x12, 0xa3, 0x01, 0x0a, 0x1d, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x40, 0x2e, 0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x72, 0x61, 0x63,
	0x6b, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x04, 0x80, 0xb5, 0x18, 0x00, 0x30, 0x01, 0x12, 0xaf, 0x01, 0x0a, 0x21, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12,
	0x44, 0x2e, 0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x74, 0x72, 0x61,
	0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x63, 0x74, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3c, 0x2e, 0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x63, 0x74, 0x61,
	0x6e, 0x67, 0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x04, 0x80, 0xb5, 0x18, 0x00, 0x30, 0x01, 0x12, 0x9d, 0x01, 0x0a, 0x1b,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e,
	0x67, 0x4f, 0x66, 0x66, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x3e, 0x2e, 0x6d, 0x61,
	0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e,
	0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4f, 0x66, 0x66, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x6d, 0x61,
	0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e,
	0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e,
	0x67, 0x4f, 0x66, 0x66, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x04, 0x80, 0xb5, 0x18, 0x00, 0x30, 0x01, 0x12, 0xa4, 0x01, 0x0a, 0x1b,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x3e, 0x2e, 0x6d, 0x61,
	0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e,
	0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64,
	0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3f, 0x2e, 0x6d, 0x61,
	0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e,
	0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64,
	0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x04, 0x80, 0xb5,
	0x18, 0x01, 0x12, 0xb0, 0x01, 0x0a, 0x1f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x54, 0x72,
	0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x42, 0x2e, 0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x54, 0x72, 0x61, 0x63, 0x6b,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x43, 0x2e, 0x6d, 0x61, 0x76,
	0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x54,
	0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x6c, 0x65,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x04, 0x80, 0xb5, 0x18, 0x01, 0x12, 0x9e, 0x01, 0x0a, 0x19, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x64, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4f, 0x66, 0x66, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x12, 0x3c, 0x2e, 0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67,
	0x4f, 0x66, 0x66, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x3d, 0x2e, 0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x74,
	0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4f, 0x66,
	0x66, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x04, 0x80, 0xb5, 0x18, 0x01, 0x42, 0x28, 0x42, 0x13, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69,
	0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x5a, 0x11, 0x2e,
	0x3b, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tracking_server_proto_rawDescOnce sync.Once
	file_tracking_server_proto_rawDescData = file_tracking_server_proto_rawDesc
)

func file_tracking_server_proto_rawDescGZIP() []byte {
	file_tracking_server_proto_rawDescOnce.Do(func() {
		file_tracking_server_proto_rawDescData = protoimpl.X.CompressGZIP(file_tracking_server_proto_rawDescData)
	})
	return file_tracking_server_proto_rawDescData
}

var file_tracking_server_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_tracking_server_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_tracking_server_proto_goTypes = []interface{}{
	(CommandAnswer)(0),                               // 0: mavsdk.rpc.tracking_server.CommandAnswer
	(TrackingServerResult_Result)(0),                 // 1: mavsdk.rpc.tracking_server.TrackingServerResult.Result
	(*SetTrackingPointStatusRequest)(nil),            // 2: mavsdk.rpc.tracking_server.SetTrackingPointStatusRequest
	(*SetTrackingPointStatusResponse)(nil),           // 3: mavsdk.rpc.tracking_server.SetTrackingPointStatusResponse
	(*SetTrackingRectangleStatusRequest)(nil),        // 4: mavsdk.rpc.tracking_server.SetTrackingRectangleStatusRequest
	(*SetTrackingRectangleStatusResponse)(nil),       // 5: mavsdk.rpc.tracking_server.SetTrackingRectangleStatusResponse
	(*SetTrackingOffStatusRequest)(nil),              // 6: mavsdk.rpc.tracking_server.SetTrackingOffStatusRequest
	(*SetTrackingOffStatusResponse)(nil),             // 7: mavsdk.rpc.tracking_server.SetTrackingOffStatusResponse
	(*SubscribeTrackingPointCommandRequest)(nil),     // 8: mavsdk.rpc.tracking_server.SubscribeTrackingPointCommandRequest
	(*TrackingPointCommandResponse)(nil),             // 9: mavsdk.rpc.tracking_server.TrackingPointCommandResponse
	(*SubscribeTrackingRectangleCommandRequest)(nil), // 10: mavsdk.rpc.tracking_server.SubscribeTrackingRectangleCommandRequest
	(*TrackingRectangleCommandResponse)(nil),         // 11: mavsdk.rpc.tracking_server.TrackingRectangleCommandResponse
	(*SubscribeTrackingOffCommandRequest)(nil),       // 12: mavsdk.rpc.tracking_server.SubscribeTrackingOffCommandRequest
	(*TrackingOffCommandResponse)(nil),               // 13: mavsdk.rpc.tracking_server.TrackingOffCommandResponse
	(*RespondTrackingPointCommandRequest)(nil),       // 14: mavsdk.rpc.tracking_server.RespondTrackingPointCommandRequest
	(*RespondTrackingPointCommandResponse)(nil),      // 15: mavsdk.rpc.tracking_server.RespondTrackingPointCommandResponse
	(*RespondTrackingRectangleCommandRequest)(nil),   // 16: mavsdk.rpc.tracking_server.RespondTrackingRectangleCommandRequest
	(*RespondTrackingRectangleCommandResponse)(nil),  // 17: mavsdk.rpc.tracking_server.RespondTrackingRectangleCommandResponse
	(*RespondTrackingOffCommandRequest)(nil),         // 18: mavsdk.rpc.tracking_server.RespondTrackingOffCommandRequest
	(*RespondTrackingOffCommandResponse)(nil),        // 19: mavsdk.rpc.tracking_server.RespondTrackingOffCommandResponse
	(*TrackPoint)(nil),                               // 20: mavsdk.rpc.tracking_server.TrackPoint
	(*TrackRectangle)(nil),                           // 21: mavsdk.rpc.tracking_server.TrackRectangle
	(*TrackingServerResult)(nil),                     // 22: mavsdk.rpc.tracking_server.TrackingServerResult
}
var file_tracking_server_proto_depIdxs = []int32{
	20, // 0: mavsdk.rpc.tracking_server.SetTrackingPointStatusRequest.tracked_point:type_name -> mavsdk.rpc.tracking_server.TrackPoint
	21, // 1: mavsdk.rpc.tracking_server.SetTrackingRectangleStatusRequest.tracked_rectangle:type_name -> mavsdk.rpc.tracking_server.TrackRectangle
	20, // 2: mavsdk.rpc.tracking_server.TrackingPointCommandResponse.track_point:type_name -> mavsdk.rpc.tracking_server.TrackPoint
	21, // 3: mavsdk.rpc.tracking_server.TrackingRectangleCommandResponse.track_rectangle:type_name -> mavsdk.rpc.tracking_server.TrackRectangle
	0,  // 4: mavsdk.rpc.tracking_server.RespondTrackingPointCommandRequest.command_answer:type_name -> mavsdk.rpc.tracking_server.CommandAnswer
	22, // 5: mavsdk.rpc.tracking_server.RespondTrackingPointCommandResponse.tracking_server_result:type_name -> mavsdk.rpc.tracking_server.TrackingServerResult
	0,  // 6: mavsdk.rpc.tracking_server.RespondTrackingRectangleCommandRequest.command_answer:type_name -> mavsdk.rpc.tracking_server.CommandAnswer
	22, // 7: mavsdk.rpc.tracking_server.RespondTrackingRectangleCommandResponse.tracking_server_result:type_name -> mavsdk.rpc.tracking_server.TrackingServerResult
	0,  // 8: mavsdk.rpc.tracking_server.RespondTrackingOffCommandRequest.command_answer:type_name -> mavsdk.rpc.tracking_server.CommandAnswer
	22, // 9: mavsdk.rpc.tracking_server.RespondTrackingOffCommandResponse.tracking_server_result:type_name -> mavsdk.rpc.tracking_server.TrackingServerResult
	1,  // 10: mavsdk.rpc.tracking_server.TrackingServerResult.result:type_name -> mavsdk.rpc.tracking_server.TrackingServerResult.Result
	2,  // 11: mavsdk.rpc.tracking_server.TrackingServerService.SetTrackingPointStatus:input_type -> mavsdk.rpc.tracking_server.SetTrackingPointStatusRequest
	4,  // 12: mavsdk.rpc.tracking_server.TrackingServerService.SetTrackingRectangleStatus:input_type -> mavsdk.rpc.tracking_server.SetTrackingRectangleStatusRequest
	6,  // 13: mavsdk.rpc.tracking_server.TrackingServerService.SetTrackingOffStatus:input_type -> mavsdk.rpc.tracking_server.SetTrackingOffStatusRequest
	8,  // 14: mavsdk.rpc.tracking_server.TrackingServerService.SubscribeTrackingPointCommand:input_type -> mavsdk.rpc.tracking_server.SubscribeTrackingPointCommandRequest
	10, // 15: mavsdk.rpc.tracking_server.TrackingServerService.SubscribeTrackingRectangleCommand:input_type -> mavsdk.rpc.tracking_server.SubscribeTrackingRectangleCommandRequest
	12, // 16: mavsdk.rpc.tracking_server.TrackingServerService.SubscribeTrackingOffCommand:input_type -> mavsdk.rpc.tracking_server.SubscribeTrackingOffCommandRequest
	14, // 17: mavsdk.rpc.tracking_server.TrackingServerService.RespondTrackingPointCommand:input_type -> mavsdk.rpc.tracking_server.RespondTrackingPointCommandRequest
	16, // 18: mavsdk.rpc.tracking_server.TrackingServerService.RespondTrackingRectangleCommand:input_type -> mavsdk.rpc.tracking_server.RespondTrackingRectangleCommandRequest
	18, // 19: mavsdk.rpc.tracking_server.TrackingServerService.RespondTrackingOffCommand:input_type -> mavsdk.rpc.tracking_server.RespondTrackingOffCommandRequest
	3,  // 20: mavsdk.rpc.tracking_server.TrackingServerService.SetTrackingPointStatus:output_type -> mavsdk.rpc.tracking_server.SetTrackingPointStatusResponse
	5,  // 21: mavsdk.rpc.tracking_server.TrackingServerService.SetTrackingRectangleStatus:output_type -> mavsdk.rpc.tracking_server.SetTrackingRectangleStatusResponse
	7,  // 22: mavsdk.rpc.tracking_server.TrackingServerService.SetTrackingOffStatus:output_type -> mavsdk.rpc.tracking_server.SetTrackingOffStatusResponse
	9,  // 23: mavsdk.rpc.tracking_server.TrackingServerService.SubscribeTrackingPointCommand:output_type -> mavsdk.rpc.tracking_server.TrackingPointCommandResponse
	11, // 24: mavsdk.rpc.tracking_server.TrackingServerService.SubscribeTrackingRectangleCommand:output_type -> mavsdk.rpc.tracking_server.TrackingRectangleCommandResponse
	13, // 25: mavsdk.rpc.tracking_server.TrackingServerService.SubscribeTrackingOffCommand:output_type -> mavsdk.rpc.tracking_server.TrackingOffCommandResponse
	15, // 26: mavsdk.rpc.tracking_server.TrackingServerService.RespondTrackingPointCommand:output_type -> mavsdk.rpc.tracking_server.RespondTrackingPointCommandResponse
	17, // 27: mavsdk.rpc.tracking_server.TrackingServerService.RespondTrackingRectangleCommand:output_type -> mavsdk.rpc.tracking_server.RespondTrackingRectangleCommandResponse
	19, // 28: mavsdk.rpc.tracking_server.TrackingServerService.RespondTrackingOffCommand:output_type -> mavsdk.rpc.tracking_server.RespondTrackingOffCommandResponse
	20, // [20:29] is the sub-list for method output_type
	11, // [11:20] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_tracking_server_proto_init() }
func file_tracking_server_proto_init() {
	if File_tracking_server_proto != nil {
		return
	}
	file_mavsdk_options_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_tracking_server_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetTrackingPointStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tracking_server_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetTrackingPointStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tracking_server_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetTrackingRectangleStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tracking_server_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetTrackingRectangleStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tracking_server_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetTrackingOffStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tracking_server_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetTrackingOffStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tracking_server_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeTrackingPointCommandRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tracking_server_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrackingPointCommandResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tracking_server_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeTrackingRectangleCommandRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tracking_server_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrackingRectangleCommandResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tracking_server_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeTrackingOffCommandRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tracking_server_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrackingOffCommandResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tracking_server_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespondTrackingPointCommandRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tracking_server_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespondTrackingPointCommandResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tracking_server_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespondTrackingRectangleCommandRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tracking_server_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespondTrackingRectangleCommandResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tracking_server_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespondTrackingOffCommandRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tracking_server_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespondTrackingOffCommandResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tracking_server_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrackPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tracking_server_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrackRectangle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tracking_server_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrackingServerResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tracking_server_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_tracking_server_proto_goTypes,
		DependencyIndexes: file_tracking_server_proto_depIdxs,
		EnumInfos:         file_tracking_server_proto_enumTypes,
		MessageInfos:      file_tracking_server_proto_msgTypes,
	}.Build()
	File_tracking_server_proto = out.File
	file_tracking_server_proto_rawDesc = nil
	file_tracking_server_proto_goTypes = nil
	file_tracking_server_proto_depIdxs = nil
}
